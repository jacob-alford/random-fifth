{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["audio","window","AudioContext","webkitAudioContext","FREQUENCIES","JUMPS","Array","from","length","map","_","i","INITIAL_FREQUENCY","Math","random","CONSECUTIVE_FREQUENCY_RATIO","pow","MIN_FREQUENCY","MAX_FREQUENCY","setFreq","sf","osc","frequency","value","getNextFreq","oldFreq","pipe","newFreq","playLoop","oscillator","createOscillator","type","connect","destination","getOsc","duration","start","interval","intv","subscribe","AppContainer","styled","div","Button","button","Header","App","useState","s","ss","startSound","useCallback","reload","location","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6qCAMA,IAAMA,EAAQ,IAAKC,OAAOC,cAAgBD,OAAOE,oBAE3CC,EAAc,CAClB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,MACA,IACA,OACA,QAGIC,EAAQC,MAAMC,KAAK,CAAEC,OAAQ,IAAoBC,KACrD,SAACC,EAAGC,GAAJ,OAAUA,EAFK,KAIXC,EAAoBR,EAAaS,KAAKC,SAAWV,EAAYI,OAAU,GACvEO,EAA8BF,KAAKG,IAAI,EAAG,EAAI,IAC9CC,EACJL,EAAoBC,KAAKG,IAAID,GAA6B,GACtDG,EACJN,EAAoBC,KAAKG,IAAID,EATd,GAiBXI,EAAU,SAACC,GAAD,OAAqC,SAACC,GAEpD,OADAA,EAAIC,UAAUC,MAAQH,EAAGC,EAAIC,UAAUC,OAChCF,IAMHG,EAAc,SAACC,GAAD,OAClBC,eACED,EACEZ,KAAKG,IACHD,EACAV,EA9BS,EA8BFQ,KAAKC,SAAuB,KAEvC,SAAAa,GAAO,OACLA,GAAWT,EACPO,EAAUV,EACVY,GAAWV,EACXQ,EAAUV,EACVY,MAEJC,EAAW,SAACN,GAAD,OACfI,eA7Ba,WACb,IAAMG,EAAa7B,EAAM8B,mBAGzB,OAFAD,EAAWE,KAAO,OAClBF,EAAWG,QAAQhC,EAAMiC,aAClBJ,EAyBFK,IAAU,SAAAb,GAAG,OAChBK,eACEL,EACAF,GAAQ,kBAAMG,MAtBHa,EAuBH,IAvBwB,SAACd,GAErC,OADAA,EAAIe,QACGC,YAASF,MAsBZ,SAAAG,GAAI,OAAIA,EAAKC,WAAU,kBAAMb,eAAKL,EAAKF,EAAQK,UAxBrC,IAACW,MA4BXK,EAAeC,IAAOC,IAAV,KASZC,EAASF,IAAOG,OAAV,KAiBNC,EAASJ,IAAOC,IAAV,KA8BGI,EAtBI,WAAO,IAAD,EACPC,oBAAS,GADF,mBAChBC,EADgB,KACbC,EADa,KAEjBC,EAAaC,uBAAY,WAC7BvB,EAAShB,GACTqC,GAAG,KACF,IACGG,EAASD,uBAAY,WACzBlD,OAAOoD,SAASD,WACf,IACH,OACE,eAACZ,EAAD,WACE,cAACK,EAAD,UAASjC,IACT,gCACE,cAAC+B,EAAD,CAAQW,QAASJ,EAAYK,SAAUP,EAAvC,+BAGA,cAACL,EAAD,CAAQW,QAASF,EAAjB,wCC3GOI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1309e9e4.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { pipe } from \"fp-ts/lib/function\";\nimport { interval } from \"rxjs\";\nimport styled from \"styled-components\";\n\n// @ts-ignore\nconst audio = new (window.AudioContext || window.webkitAudioContext)();\n\nconst FREQUENCIES = [\n  261.63,\n  277.18,\n  293.66,\n  311.13,\n  329.63,\n  349.23,\n  369.99,\n  392.0,\n  415.3,\n  440,\n  466.16,\n  493.88\n];\nconst MAX_JUMP = 3;\nconst JUMPS = Array.from({ length: 2 * MAX_JUMP + 1 }).map(\n  (_, i) => i - MAX_JUMP\n);\nconst INITIAL_FREQUENCY = FREQUENCIES[(Math.random() * FREQUENCIES.length) | 0];\nconst CONSECUTIVE_FREQUENCY_RATIO = Math.pow(2, 7 / 12);\nconst MIN_FREQUENCY =\n  INITIAL_FREQUENCY * Math.pow(CONSECUTIVE_FREQUENCY_RATIO, -1 * MAX_JUMP);\nconst MAX_FREQUENCY =\n  INITIAL_FREQUENCY * Math.pow(CONSECUTIVE_FREQUENCY_RATIO, MAX_JUMP);\n\nconst getOsc = () => {\n  const oscillator = audio.createOscillator();\n  oscillator.type = \"sine\";\n  oscillator.connect(audio.destination);\n  return oscillator;\n};\nconst setFreq = (sf: (oldFreq: number) => number) => (osc: OscillatorNode) => {\n  osc.frequency.value = sf(osc.frequency.value);\n  return osc;\n};\nconst playOsc = (duration: number) => (osc: OscillatorNode) => {\n  osc.start();\n  return interval(duration);\n};\nconst getNextFreq = (oldFreq: number) =>\n  pipe(\n    oldFreq *\n      Math.pow(\n        CONSECUTIVE_FREQUENCY_RATIO,\n        JUMPS[(Math.random() * MAX_JUMP) | 0]\n      ),\n    newFreq =>\n      newFreq >= MAX_FREQUENCY\n        ? oldFreq / CONSECUTIVE_FREQUENCY_RATIO\n        : newFreq <= MIN_FREQUENCY\n        ? oldFreq * CONSECUTIVE_FREQUENCY_RATIO\n        : newFreq\n  );\nconst playLoop = (frequency: number) =>\n  pipe(getOsc(), osc =>\n    pipe(\n      osc,\n      setFreq(() => frequency),\n      playOsc(250),\n      intv => intv.subscribe(() => pipe(osc, setFreq(getNextFreq)))\n    )\n  );\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100vw;\n  height: 100vh;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  background: palevioletred;\n  border: 2px solid rgba(255, 255, 255, 0.8);\n  border-radius: 12px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-weight: 800;\n  font-size: 48px;\n  color: white;\n  padding: 24px;\n  height: 100%;\n  transition: background 0.5s;\n  &:disabled {\n    background: rgba(0, 0, 0, 0.24);\n  }\n`;\n\nconst Header = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-weight: 100;\n  font-size: 96px;\n  color: rgba(0, 0, 0, 0.69);\n`;\n\nexport const App = () => {\n  const [s, ss] = useState(false);\n  const startSound = useCallback(() => {\n    playLoop(INITIAL_FREQUENCY);\n    ss(true);\n  }, []);\n  const reload = useCallback(() => {\n    window.location.reload();\n  }, []);\n  return (\n    <AppContainer>\n      <Header>{INITIAL_FREQUENCY}</Header>\n      <div>\n        <Button onClick={startSound} disabled={s}>\n          ‚ñ∂Ô∏è Play\n        </Button>\n        <Button onClick={reload}>üîÉ Reload</Button>\n      </div>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}